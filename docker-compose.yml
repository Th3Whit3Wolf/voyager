version: "3.8"

services:
  capstone-db:
    image: postgres:14-alpine
    restart: always
    environment:
      - DATABASE_HOST=${PG_HOST:-127.0.0.1}
      - POSTGRES_USER=${PG_USER:-postgres}
      - POSTGRES_PASSWORD=${PG_PASSWD:-docker}
      - POSTGRES_PORT=5432
      - POSTGRES_DB=voyager
    ports:
      - "${PG_PORT-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./pg-data:/var/lib/postgresql/data
  capstone-api:
    build: backend/
    depends_on:
      capstone-db:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      - NODE_OPTIONS='--experimental-vm-modules --experimental-specifier-resolution=node'
      - NODE_ENV=development
      - FIREBASE_VOYAGER_SERVICE_ACCOUNT=${FIREBASE_VOYAGER_SERVICE_ACCOUNT}
      - FIREBASE_SERVICE_ACCOUNT_PRIVATE_KEY_ID=${FIREBASE_SERVICE_ACCOUNT_PRIVATE_KEY_ID}
      - FIREBASE_SERVICE_ACCOUNT_PRIVATE_KEY=${FIREBASE_SERVICE_ACCOUNT_PRIVATE_KEY}
      - FIREBASE_SERVICE_ACCOUNT_CLIENT_EMAIL=${FIREBASE_SERVICE_ACCOUNT_CLIENT_EMAIL}
      - FIREBASE_SERVICE_ACCOUNT_CLIENT_ID=${FIREBASE_SERVICE_ACCOUNT_CLIENT_ID}
      - FIREBASE_SERVICE_ACCOUNT_AUTH_URI=${FIREBASE_SERVICE_ACCOUNT_AUTH_URI}
      - FIREBASE_SERVICE_ACCOUNT_TOKEN_URI=${FIREBASE_SERVICE_ACCOUNT_TOKEN_URI}
      - FIREBASE_SERVICE_ACCOUNT_AUTH_PROVIDER_X509_CERT_URL=${FIREBASE_SERVICE_ACCOUNT_AUTH_PROVIDER_X509_CERT_URL}
      - FIREBASE_SERVICE_ACCOUNT_CLIENT_PROVIDER_X509_CERT_URL=${FIREBASE_SERVICE_ACCOUNT_CLIENT_PROVIDER_X509_CERT_URL}
      - DATABASE_HOST=capstone-db
      - PG_USER=${PG_USER:-postgres}
      - PG_HOST=${PG_HOST:-capstone-db}
      - PG_PASSWD=${PG_PASSWD:-docker}
      - POSTGRES_PORT=${PG_PORT-5432}
      - POSTGRES_DB=capstone
    volumes:
      - type: bind
        source: ./backend
        target: /app
    command: npm run dev

  capstone-db-viewer:
    build: backend/
    depends_on:
      capstone-db:
        condition: service_healthy
    ports:
      - "8082:8081"
    environment:
      - NODE_OPTIONS='--experimental-vm-modules --experimental-specifier-resolution=node'
      - NODE_ENV=development
      - DATABASE_HOST=capstone-db
      - PG_USER=${PG_USER:-postgres}
      - PG_HOST=${PG_HOST:-capstone-db}
      - PG_PASSWD=${PG_PASSWD:-docker}
      - POSTGRES_PORT=${PG_PORT-5432}
      - POSTGRES_DB=capstone
    volumes:
      - type: bind
        source: ./backend
        target: /app
    command: npm run db:view -- --port 8081 --browser none
  capstone-ui:
    build: frontend/
    depends_on:
      - "capstone-api"
    ports:
      - "3000:3000"
    environment:
      - VITE_REACT_APP_FIREBASE=${REACT_APP_FIREBASE}
      - VITE_REACT_APP_FIREBASE_API_KEY=${REACT_APP_FIREBASE_API_KEY}
      - VITE_REACT_APP_FIREBASE_AUTH_DOMAIN=${REACT_APP_FIREBASE_API_KEY}
      - VITE_REACT_APP_FIREBASE_PROJECT_ID=${REACT_APP_FIREBASE_API_KEY}
      - VITE_REACT_APP_FIREBASE_STORAGE_BUCKET=${REACT_APP_FIREBASE_API_KEY}
      - VITE_REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${REACT_APP_FIREBASE_API_KEY}
      - VITE_REACT_APP_FIREBASE_APP_ID=${REACT_APP_FIREBASE_API_KEY}
    volumes:
      - type: bind
        source: ./frontend/src
        target: /app/src
