version: '3.8'

services:
  capstone-db:
    image: postgres
    restart: always
    environment:
      - DATABASE_HOST=${PG_HOST:-127.0.0.1}
      - POSTGRES_USER=${PG_USER:-postgres}
      - POSTGRES_PASSWORD=${PG_PASSWD:-docker}
      - POSTGRES_PORT=5432
      - POSTGRES_DB=voyager
    ports:
      - '${PG_PORT-5432}:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${PG_USER:-postgres}']
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./pg-data:/var/lib/postgresql/data
  capstone-api:
    build: backend/
    depends_on:
      capstone-db:
        condition: service_healthy
    ports:
      - '8081:8081'
    environment:
      - NODE_OPTIONS='--experimental-vm-modules --experimental-specifier-resolution=node'
      - NODE_ENV=development
      - DATABASE_HOST=capstone-db
      - PG_USER=${PG_USER:-postgres}
      - PG_PASSWD=${PG_PASSWD:-docker}
      - POSTGRES_PORT=${PG_PORT-5432}
      - POSTGRES_DB=capstone
    volumes:
      - type: bind
        source: ./backend
        target: /app
    command: npm run dev
  capstone-ui:
    build: frontend/
    depends_on:
      - 'capstone-api'
    ports:
      - '3000:3000'
    volumes:
      - type: bind
        source: ./frontend/src
        target: /app/src
